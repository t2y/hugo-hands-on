<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>theme on Hugo ハンズオン</title><link>/hugo-hands-on/tags/theme/</link><description>Recent content in theme on Hugo ハンズオン</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 28 Jan 2024 15:05:58 +0900</lastBuildDate><atom:link href="/hugo-hands-on/tags/theme/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo のテーマをカスタマイズする</title><link>/hugo-hands-on/customize-theme/</link><pubDate>Sun, 28 Jan 2024 15:05:58 +0900</pubDate><guid>/hugo-hands-on/customize-theme/</guid><description>このハンズオン資料は Cupper というテーマを使っています。
テーマのディレクトリ構成 このテーマのインストールは次のように cupper-hugo-theme というリポジトリをそのまま themes/ 配下に配置しています。
$ git submodule add https://github.com/zwbetz-gh/cupper-hugo-theme.git themes/cupper-hugo-theme $ git submodule update ディレクトリ階層は次のようになります。
$ tree -L 2 themes/ themes/ └── cupper-hugo-theme ├── LICENSE ├── README.md ├── archetypes ├── assets ├── data ├── exampleSite ├── i18n ├── images ├── layouts ├── local_git_config.sh ├── netlify.toml ├── static ├── task_regen_toc.sh ├── task_serve.sh └── theme.toml 9 directories, 7 files この階層の配下にテーマのソースコードがすべてあると考えてください。
Custom CSS and JS からカスタマイズした CSS の配置場所と設定についてドキュメントがあります。もしくは次のサンプルの設定ファイルをみた方がイメージしやすいかもしれません (オリジナルの yaml を toml に変換) 。</description></item><item><title>新規サイトの構築</title><link>/hugo-hands-on/new-site/</link><pubDate>Sun, 14 Jan 2024 14:21:23 +0900</pubDate><guid>/hugo-hands-on/new-site/</guid><description>ここでは一から自分のサイトを作ってみましょう。
サイトの雛形を生成 mysite というディレクトリ配下にサイトに必要なファイル群を作成していきます。
$ hugo new site mysite Congratulations! Your new Hugo site was created in path/to/mysite. Just a few more steps... 1. Change the current directory to path/to/mysite. 2. Create or install a theme: - Create a new theme with the command &amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34; - Install a theme from https://themes.gohugo.io/ 3. Edit hugo.toml, setting the &amp;#34;theme&amp;#34; property to the theme name. 4. Create new content with the command &amp;#34;hugo new content &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.</description></item></channel></rss>